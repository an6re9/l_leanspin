function burgerMenu(){const e=document.querySelector(".burger"),t=document.querySelector(".navigation__menu");e.onclick=function(n){e.classList.toggle("burger__active"),e.classList.contains("burger__active")?(document.body.style.overflow="hidden",t.removeAttribute("style"),t.classList.add("navigation__menu_mobile")):(document.body.removeAttribute("style"),t.classList.remove("navigation__menu_mobile"))},window.onresize=function(){window.innerWidth>768?(document.body.removeAttribute("style"),t.classList.remove("navigation__menu_mobile"),e.classList.remove("burger__active")):e.classList.contains("burger__active")||(t.style.transition="none")}}function slider(){document.querySelectorAll(".slider").forEach((e=>{const t=e.querySelectorAll(".slider__links a[data-link]"),n=e.querySelector(".pagination__container"),i=e.querySelectorAll(".pagination__item[data-link]");let o;function s(t){e.querySelectorAll("[data-link]").forEach((e=>{e.classList.remove("active","slide_visible"),e.dataset.link===t&&(e.classList.contains("slide")?e.classList.add("slide_visible"):(e.classList.add("active"),e.classList.contains("pagination__item")&&r(e)))}))}function r(e){return n.style.left=-e.offsetLeft+"px",a(n),!0}function a(e){e.style.transition="left 0.4s";setTimeout((()=>e.style.transition=""),500)}n.style.left=n.offsetLeft+"px",function(){const e=document.querySelector(".slider__pagination"),t=e.querySelector(".pagination__container"),n=Array.from(e.querySelectorAll(".pagination__item"));function i(){return Number(t.style.left.replace(/[^\d-]/g,""))||0}window.addEventListener("resize",(function(){clearTimeout(o),o=setTimeout((()=>{r(e.querySelector(".pagination__item.active"))}),300)})),t.addEventListener("pointerdown",(function(e){const o=parseInt(e.clientX);let r=i();function l(e){t.style.left=r+(parseInt(e.clientX)-o)+"px"}document.addEventListener("pointermove",l),document.addEventListener("pointerup",(function e(){document.removeEventListener("pointermove",l),function(){let e=i();if(e>=0)return a(t),t.style.left="0px",void s(n[0].dataset.link);e=Math.abs(e);let o=0;for(let i=0;i<n.length;i++){let r=n[i].offsetWidth;if(o+=r,i===n.length-1&&e>o-r)return a(t),t.style.left=-(o-r)+"px",void s(n[i].dataset.link);if(e<o&&e>o-r+r/2)return s(n[i+1].dataset.link),a(t),void(t.style.left=-o+"px");if(e<o&&e>o-r)return s(n[i].dataset.link),a(t),void(t.style.left=-o+r+"px")}}(),document.removeEventListener("pointerup",e)}))}))}(),t[0].classList.add("active"),i[0].classList.add("active"),t.forEach((e=>{e.addEventListener("click",(e=>s(e.target.dataset.link)))}))}))}function runningString(){document.querySelectorAll(".str__container").forEach((e=>{const t=e.firstElementChild,n=Number(e.dataset.speed);let i,o=0;i=requestAnimationFrame((function s(){t.offsetWidth<=Math.abs(o)?o=t.offsetWidth-Math.abs(o)+n:o+=n;i=requestAnimationFrame(s),e.style.transform=`translateX(${o}px)`})),n>0&&(e.style.cssText=`position:relative; left:-${t.offsetWidth}px`)}))}window.onload=()=>{burgerMenu(),slider(),runningString()};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,